/*
 *  Starts up a component presence in the calling framework.
 * @param services the component instance's handle on the framework world.
 * Contracts concerning Svc and setServices:
 * 
 * The component interaction with the CCA framework
 * and Ports begins on the call to setServices by the framework.
 * 
 * This function is called exactly once for each instance created
 * by the framework.
 * 
 * The argument Svc will never be nil/null.
 * 
 * Those uses ports which are automatically connected by the framework
 * (so-called service-ports) may be obtained via getPort during
 * setServices.
 */

#undef __FUNC__
#define __FUNC__ "impl_pytest_c_setServices"

#ifdef __cplusplus
extern "C"
#endif
void
impl_pytest_c_setServices(
  /* in */ pytest_c self,
  /* in */ gov_cca_Services services,
  /* out */ sidl_BaseInterface *_ex)
{
  *_ex = 0;
  {
#line 448 "pytest_c_Impl.c" /* This line not in actual source */
  /* DO-NOT-DELETE splicer.begin(pytest.c.setServices) */

  /* bocca-default-code. User may edit or delete.begin(pytest.c.setServices) */
    impl_pytest_c_boccaSetServices(self, services, _ex); SIDL_CHECK(*_ex);
  /* bocca-default-code. User may edit or delete.end(pytest.c.setServices) */
  
  /*  Insert-UserCode-Here {pytest.c.setServices} (setServices method) */

EXIT:;
    /* Insert additional exception cleanup here if needed. */
    return;

  /* DO-NOT-DELETE splicer.end(pytest.c.setServices) */
  }
}
